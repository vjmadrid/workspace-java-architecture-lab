<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.acme.architecture.core</groupId>
	<artifactId>architecture-spring-core</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>architecture-spring-core</name>
	<description></description>

	<properties>
		<!-- *** Important : Include properties in ~/.m2/settings.xml -->

		<!-- Compiler & Resources -->
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Architecture libraries -->
		<acme-architecture-testing-spring.version>0.0.1-SNAPSHOT</acme-architecture-testing-spring.version>
		<acme-architecture-common.version>0.0.1-SNAPSHOT</acme-architecture-common.version>

		<!-- Dependency Versions -->
		<spring-boot.version>2.5.12</spring-boot.version>
		<spring.version>5.2.9.RELEASE</spring.version>
		<springfox.version>3.0.0</springfox.version>
		<swagger.version>1.6.2</swagger.version>

		<!-- Plugins -->
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
		<jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		
	</properties>

	<!-- <profiles> They are found definitively in in ~/.m2/settings.xml -->

	<dependencies>

		<!-- *** Architecture Libraries *** -->
		
		<!-- architecture-testing-spring: Custom Testing Library
			Include : 
				* JUnit, Mockito, ...
				* archunit + custom rules
				
		-->
		
		<dependency>
			<groupId>com.acme.architecture.testing</groupId>
			<artifactId>architecture-testing-spring</artifactId>
			<version>${acme-architecture-testing-spring.version}</version>
		</dependency>
		
		<!-- architecture-common : Custom Common Library
			Include : 
				* Generic Exception
				* Constants
				* ...
				
		-->

		<dependency>
			<groupId>com.acme.architecture.common</groupId>
			<artifactId>architecture-common</artifactId>
			<version>${acme-architecture-common.version}</version>
		</dependency>

		<!-- Modules -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>

		<!-- *** Third Party Libraries *** -->

		<!-- spring-aspects : class utilities -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>3.2.0.RELEASE</version>
		</dependency>

		<!-- springfox-swagger : API Rest documentation -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-boot-starter</artifactId>
			<version>${springfox.version}</version>
		</dependency>

		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-core</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-models</artifactId>
			<version>${swagger.version}</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-bean-validators</artifactId>
			<version>${springfox.version}</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-oas</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		
		<!-- Required for pagination testing -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>


	</dependencies>

	<build>
		<finalName>architecture-spring-core</finalName>
		<plugins>

			<!-- maven-compiler-plugin : Plugin used to compile the project source -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- maven-resources-plugin : Plugin used to handle the project resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- maven-surefire-plugin : Plugin used to run unit tests - Generate 
				reports in the directory target/surefire-reports -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<skipTests>${skip.unit.tests}</skipTests>
					<testFailureIgnore>false</testFailureIgnore>
					<properties>
						<configurationParameters>
							junit.jupiter.execution.parallel.enabled=true
							junit.jupiter.execution.parallel.config.dynamic.factor=2
							junit.platform.output.capture.stdout=true
							junit.platform.output.capture.stderr=true
						</configurationParameters>
					</properties>
				</configuration>
			</plugin>
			
			<!-- maven-failsafe-plugin : Plugin used to run integration tests -->
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<skipITs>${skip.integration.tests}</skipITs>
					<includes>
						<include>**/*TestIT</include>
						<include>**/*TestITCase</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- jacoco-maven-plugin : Plugin used to generate code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>coverage-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>coverage-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<outputDirectory>target/jacoco-reports</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>coverage-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>PACKAGE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>80%</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- maven-deploy-plugin : Plugin used during the deploy phase (use with artifact repository) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven-deploy-plugin.version}</version>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>